version: 2
jobs:
  build:
    parallelism: 1 # 3
    docker:
      - image: circleci/ruby:2.5-node
        environment:
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          PGHOST: 127.0.0.1
          PGUSER: meetup
          RAILS_ENV: test
      - image: circleci/postgres:9.6-alpine
        environment:
          POSTGRES_USER: meetup
          POSTGRES_DB: meetup_test
          POSTGRES_PASSWORD: "password123"
    steps:
      - checkout

      # Which version of bundler?
      - run:
          name: Which bundler?
          command: bundle -v

      # Restore bundle cache
      - restore_cache:
          keys:
            - meetup-rails-bundle-{{ checksum "rest-server/Gemfile.lock" }}
            - meetup-rails-bundle-

      - run:
          name: Bundle Install
          command: cd ./rest-server; bundle check || bundle install --path vendor/bundle

      # Store bundle cache
      - save_cache:
          key: meetup-rails-bundle-{{ checksum "rest-server/Gemfile.lock" }}
          paths:
            - rest-server/vendor/bundle

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: Database setup
          command: cd ./rest-server; bin/rails db:structure:load --trace

      # Run rspec in parallel
      - type: shell
        command: |
          cd ./rest-server; \
          bundle exec rspec --profile 10 \
                            --format RspecJunitFormatter \
                            --out test_results/rspec.xml \
                            --format progress \
                            $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)


      # Save test results for timing analysis
      - store_test_results:
          path: rest-server/test_results
